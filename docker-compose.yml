version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: edubot_mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: edubot
    volumes:
      - mongodb_data:/data/db
      - ./database/init.js:/docker-entrypoint-initdb.d/init.js:ro
    networks:
      - edubot_network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3

  # MongoDB Web UI
  mongo-express:
    image: mongo-express:1.0.0
    container_name: edubot_mongo_express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_URL: mongodb://admin:password123@mongodb:27017/
      ME_CONFIG_BASICAUTH: false
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - edubot_network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: edubot_backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      MONGODB_URL: mongodb://admin:password123@mongodb:27017
      DATABASE_NAME: edubot
      SECRET_KEY: edubot-secret-key-production
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      AGENT_MAIN_URL: http://main-agent:8001
      AGENT_EXTERNAL_URL: http://external-agent:8002
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - edubot_network
    volumes:
      - ./backend/uploads:/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Main Agent
  main-agent:
    build:
      context: ./agent
      dockerfile: Dockerfile.main
    container_name: edubot_main_agent
    restart: unless-stopped
    ports:
      - "8001:8001"
    environment:
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENAI_MODEL: gpt-3.5-turbo
      BACKEND_URL: http://backend:8000/api/v1
    networks:
      - edubot_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # External Agent
  external-agent:
    build:
      context: ./agent
      dockerfile: Dockerfile.external
    container_name: edubot_external_agent
    restart: unless-stopped
    ports:
      - "8002:8002"
    environment:
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENAI_MODEL: gpt-3.5-turbo
    networks:
      - edubot_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: edubot_frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      VITE_API_BASE_URL: http://localhost:3000/api/v1/
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - edubot_network

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: edubot_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
      - main-agent
      - external-agent
    networks:
      - edubot_network
    profiles:
      - production

volumes:
  mongodb_data:
    driver: local

networks:
  edubot_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
